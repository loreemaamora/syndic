# Generated by Django 4.2.16 on 2025-05-04 15:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patrimoine', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant récurrent')),
                ('frequence', models.CharField(choices=[('mensuel', 'Mensuel'), ('trimestriel', 'Trimestriel'), ('annuel', 'Annuel')], default='mensuel', max_length=20, verbose_name='Fréquence de facturation')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de fin (si résiliable)')),
                ('actif', models.BooleanField(default=True, verbose_name='Abonnement actif ?')),
                ('description', models.TextField(blank=True, verbose_name='Détails (ex: charges, services inclus)')),
            ],
            options={
                'verbose_name': 'Abonnement',
                'verbose_name_plural': 'Abonnements',
            },
        ),
        migrations.CreateModel(
            name='Compte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compte', models.CharField(max_length=20, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('type_compte', models.CharField(choices=[('actif', 'Actif'), ('passif', 'Passif'), ('recette', 'Recette'), ('depense', 'Dépense'), ('ajustement', 'Ajustement')], max_length=50)),
            ],
            options={
                'ordering': ['compte'],
            },
        ),
        migrations.CreateModel(
            name='EcritureComptable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Montant')),
                ('type_ecriture', models.CharField(choices=[('DB', 'Débit'), ('CR', 'Crédit')], max_length=2, verbose_name="Type d'écriture")),
            ],
            options={
                'verbose_name': 'Écriture comptable',
                'verbose_name_plural': 'Écritures comptables',
                'ordering': ['-transaction__id'],
            },
        ),
        migrations.CreateModel(
            name='ExerciceComptable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('est_ouvert', models.BooleanField(default=True)),
                ('est_actuel', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('date_operation', models.DateField()),
                ('libelle', models.CharField(max_length=255)),
                ('justif', models.FileField(blank=True, null=True, upload_to='transactions/')),
                ('exercice', models.ForeignKey(limit_choices_to={'est_ouvert': True}, on_delete=django.db.models.deletion.CASCADE, related_name='transactions_exercice', to='comptabilite.exercicecomptable')),
            ],
            options={
                'ordering': ['-date_operation'],
            },
        ),
        migrations.CreateModel(
            name='SoldeExerciceCompte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solde_initial', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('solde_actuel', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('compte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soldes_exercice', to='comptabilite.compte')),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soldes_compte', to='comptabilite.exercicecomptable')),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Code unique du fournisseur (ex: FRN-ELEC-001)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Le code doit contenir seulement des majuscules, chiffres, - ou _', regex='^[A-Z0-9_-]+$')], verbose_name='Code fournisseur')),
                ('raison_sociale', models.CharField(help_text='Raison sociale complète du fournisseur', max_length=200, verbose_name='Raison sociale')),
                ('adresse', models.TextField(blank=True, verbose_name='Adresse')),
                ('ville', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('date_creation', models.DateField(auto_now_add=True, verbose_name='Date de création')),
                ('actif', models.BooleanField(default=True, help_text='Désactivez au lieu de supprimer', verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'verbose_name_plural': 'Fournisseurs',
                'ordering': ['raison_sociale'],
                'indexes': [models.Index(fields=['code'], name='comptabilit_code_984d6e_idx'), models.Index(fields=['raison_sociale'], name='comptabilit_raison__d6e584_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='exercicecomptable',
            constraint=models.UniqueConstraint(condition=models.Q(('est_actuel', True)), fields=('est_actuel',), name='unique_exercice_actuel'),
        ),
        migrations.AddField(
            model_name='ecriturecomptable',
            name='compte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecritures', to='comptabilite.compte', verbose_name='Compte comptable'),
        ),
        migrations.AddField(
            model_name='ecriturecomptable',
            name='fournisseur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecritures', to='comptabilite.fournisseur', verbose_name='Fournisseur associé'),
        ),
        migrations.AddField(
            model_name='ecriturecomptable',
            name='lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecritures', to='patrimoine.lot', verbose_name='Lot associé'),
        ),
        migrations.AddField(
            model_name='ecriturecomptable',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecritures', to='comptabilite.transaction', verbose_name='Transaction liée'),
        ),
        migrations.AddField(
            model_name='abonnement',
            name='lot',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='patrimoine.lot'),
        ),
        migrations.AlterUniqueTogether(
            name='soldeexercicecompte',
            unique_together={('compte', 'exercice')},
        ),
        migrations.AddConstraint(
            model_name='ecriturecomptable',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('fournisseur__isnull', True), ('lot__isnull', True), _negated=True), models.Q(('fournisseur__isnull', True), ('lot__isnull', False)), models.Q(('fournisseur__isnull', False), ('lot__isnull', True)), _connector='OR'), name='tiers_exclusif'),
        ),
    ]
